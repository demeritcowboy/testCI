name: Stripe Tests
on:
  workflow_dispatch:
    inputs:
      matrix:
        description: matrix in json format
        required: true
        default: '{"include":[{"php-versions":"7.4","drupal":"~9.3.1","civicrm":"dev-master"}]}'
jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(github.event.inputs.matrix) }}
    name: ${{ github.event.inputs.repourl }} | Drupal ${{ matrix.drupal }} | CiviCRM ${{ matrix.civicrm }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
            php-version: ${{ matrix.php-versions }}
            extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
            coverage: none
            tools: composer:v2
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
            path: ${{ steps.composercache.outputs.dir }}
            key: ${{ runner.os }}-${{ matrix.drupal }}-composer-${{ hashFiles('**/composer.json') }}
            restore-keys: ${{ runner.os }}-composer-
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Download cv
        run: |
          cd $GITHUB_WORKSPACE
          git clone https://github.com/civicrm/cv.git civicrm-cv
          cd civicrm-cv
          # downloads-plugin is locked at 2.1 but that doesn't work with composer v2
          rm composer.lock
          composer config --no-interaction --no-plugins allow-plugins.composer/installers true
          composer config --no-interaction --no-plugins allow-plugins.drupal/core-composer-scaffold true
          composer config --no-interaction --no-plugins allow-plugins.drupal/core-project-message true
          composer config --no-interaction --no-plugins allow-plugins.civicrm/composer-compile-plugin true
          composer config --no-interaction --no-plugins allow-plugins.civicrm/composer-downloads-plugin true
          composer config --no-interaction --no-plugins allow-plugins.civicrm/civicrm-asset-plugin true
          composer config --no-interaction --no-plugins allow-plugins.cweagans/composer-patches true
          COMPOSER_MEMORY_LIMIT=-1 composer install
      - name: Download Drupal
        run: |
          COMPOSER_MEMORY_LIMIT=-1 composer create-project drupal/recommended-project:${{ matrix.drupal }} ~/drupal --no-interaction
          cd ~/drupal
          composer config extra.enable-patching true
          composer config extra.compile-mode all
          composer config minimum-stability dev      
          composer config --no-interaction --no-plugins allow-plugins.composer/installers true
          composer config --no-interaction --no-plugins allow-plugins.drupal/core-composer-scaffold true
          composer config --no-interaction --no-plugins allow-plugins.drupal/core-project-message true
          composer config --no-interaction --no-plugins allow-plugins.civicrm/composer-compile-plugin true
          composer config --no-interaction --no-plugins allow-plugins.civicrm/composer-downloads-plugin true
          composer config --no-interaction --no-plugins allow-plugins.civicrm/civicrm-asset-plugin true
          composer config --no-interaction --no-plugins allow-plugins.cweagans/composer-patches true
      - name: Download CiviCRM ${{ matrix.civicrm }}
        run: |
          cd ~/drupal
          COMPOSER_MEMORY_LIMIT=-1 composer require civicrm/civicrm-asset-plugin:'~1.1' civicrm/civicrm-{core,packages,drupal-8}:${{ matrix.civicrm }}
          COMPOSER_MEMORY_LIMIT=-1 composer require phpunit/phpunit:'^8.5' drush/drush
      - name: Install Drupal
        run: |
          cd ~/drupal
          ./vendor/drush/drush/drush -y -l http://civi.localhost site-install standard --db-url='mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/db' --site-name=TestCivi --account-pass=admin
          chmod +w web/sites/default
      - name: Install CiviCRM
        run: |
          cd ~/drupal
          $GITHUB_WORKSPACE/civicrm-cv/bin/cv core:install --cms-base-url=http://civi.localhost -m loadGenerated=1
      - name: Get some code to test
        run: |
          mkdir -p ~/drupal/web/sites/default/files/civicrm/ext
          cd ~/drupal/web/sites/default/files/civicrm/ext
          git clone https://lab.civicrm.org/extensions/stripe.git thingtotest
          DEPS=`php -r '$xml = simplexml_load_file("thingtotest/info.xml"); $deps = array(); foreach ($xml->requires as $req) { $deps[] = $req->ext; } echo implode(" ", $deps);'`
          for e in $DEPS; do
            # Might need to be tolerant of failure here since it's possible to have dependencies that
            # aren't in universe and that could still get installed by the tests themselves. But this
            # whole system is really only designed for publicly reachable repos at the moment.
            $GITHUB_WORKSPACE/civicrm-cv/bin/cv api3 Extension.download install=0 key=$e
          done
          # sanity check
          ls -al $GITHUB_WORKSPACE
          # hmm?
          cd thingtotest
          git apply $GITHUB_WORKSPACE/stripe.patch
      - name: Run PHPUnit
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE/civicrm-cv/bin
          export CIVICRM_UF=UnitTests
          export CIVICRM_SETTINGS=~/drupal/web/sites/default/civicrm.settings.php
          cd ~/drupal/web/sites/default/files/civicrm/ext/thingtotest
          # TODO: We could do something like glob and iterate through any folders that are not Mink? But these are the only ones that typically autoload anyway.
          # This will use either phpunit.xml.dist or phpunit.xml depending on what they have, and hopefully that file points to a good bootstrap file
          if [ -d tests/phpunit/CRM ]; then ~/drupal/vendor/bin/phpunit tests/phpunit/CRM; fi
        env:
          COMPOSER_MEMORY_LIMIT: -1
          SYMFONY_DEPRECATIONS_HELPER: weak
    
